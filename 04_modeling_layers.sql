USE ROLE ACCOUNTADMIN;
USE DATABASE DEMO_DB;

-- 1) Tabela de STAGE (limpeza/deduplicação)
CREATE OR REPLACE SCHEMA DEMO_DB.STAGE;
CREATE OR REPLACE TABLE DEMO_DB.STAGE.CUSTOMERS_STAGE AS
SELECT
  TRY_TO_NUMBER(ID) AS ID,
  INITCAP(NAME) AS NAME,
  LOWER(EMAIL) AS EMAIL,
  UPPER(COUNTRY) AS COUNTRY,
  UPDATED_AT
FROM DEMO_DB.RAW.CUSTOMERS_RAW
QUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY UPDATED_AT DESC) = 1;

-- 2) Stream sobre RAW para incremental
CREATE OR REPLACE STREAM DEMO_DB.RAW.STREAM_CUSTOMERS_RAW ON TABLE DEMO_DB.RAW.CUSTOMERS_RAW;

-- 3) Task para propagar incrementais RAW -> STAGE por MERGE
CREATE OR REPLACE TASK DEMO_DB.OPS.T_RAW_TO_STAGE
  WAREHOUSE = WH_ETL
  SCHEDULE = 'USING CRON 0 */1 * * * UTC' -- a cada hora
AS
MERGE INTO DEMO_DB.STAGE.CUSTOMERS_STAGE T
USING (
  SELECT TRY_TO_NUMBER(ID) AS ID,
         INITCAP(NAME) AS NAME,
         LOWER(EMAIL) AS EMAIL,
         UPPER(COUNTRY) AS COUNTRY,
         UPDATED_AT
  FROM DEMO_DB.RAW.CUSTOMERS_RAW
) S
ON T.ID = S.ID
WHEN MATCHED AND S.UPDATED_AT > T.UPDATED_AT THEN UPDATE SET
  NAME=S.NAME, EMAIL=S.EMAIL, COUNTRY=S.COUNTRY, UPDATED_AT=S.UPDATED_AT
WHEN NOT MATCHED THEN INSERT (ID, NAME, EMAIL, COUNTRY, UPDATED_AT)
VALUES (S.ID, S.NAME, S.EMAIL, S.COUNTRY, S.UPDATED_AT);

-- 4) Tabela CURATED (dimensão exemplo)
CREATE OR REPLACE SCHEMA DEMO_DB.CURATED;
CREATE OR REPLACE TABLE DEMO_DB.CURATED.DIM_CUSTOMER (
  CUSTOMER_KEY NUMBER AUTOINCREMENT START 1 INCREMENT 1,
  ID NUMBER NOT NULL,
  NAME STRING NOT NULL,
  EMAIL STRING,
  COUNTRY STRING,
  UPDATED_AT TIMESTAMP_NTZ,
  CONSTRAINT PK_DIM_CUSTOMER PRIMARY KEY (CUSTOMER_KEY)
);

-- 5) Task STAGE -> CURATED (SCD1 simplificado)
CREATE OR REPLACE TASK DEMO_DB.OPS.T_STAGE_TO_CURATED
  WAREHOUSE = WH_ETL
  AFTER DEMO_DB.OPS.T_RAW_TO_STAGE
AS
MERGE INTO DEMO_DB.CURATED.DIM_CUSTOMER D
USING DEMO_DB.STAGE.CUSTOMERS_STAGE S
ON D.ID = S.ID
WHEN MATCHED AND S.UPDATED_AT > D.UPDATED_AT THEN UPDATE SET
  NAME=S.NAME, EMAIL=S.EMAIL, COUNTRY=S.COUNTRY, UPDATED_AT=S.UPDATED_AT
WHEN NOT MATCHED THEN INSERT (ID, NAME, EMAIL, COUNTRY, UPDATED_AT)
VALUES (S.ID, S.NAME, S.EMAIL, S.COUNTRY, S.UPDATED_AT);

-- 6) Exemplo de Dynamic Table (opcional)
CREATE OR REPLACE DYNAMIC TABLE DEMO_DB.CURATED.DT_COUNTRY_CUSTOMERS
TARGET_LAG = '10 minutes'
WAREHOUSE = WH_ETL
AS
SELECT COUNTRY, COUNT(*) AS NUM_CUSTOMERS
FROM DEMO_DB.CURATED.DIM_CUSTOMER
GROUP BY COUNTRY;

-- 7) Habilitar as tasks em cadeia
ALTER TASK DEMO_DB.OPS.T_STAGE_TO_CURATED RESUME;
ALTER TASK DEMO_DB.OPS.T_RAW_TO_STAGE RESUME;
